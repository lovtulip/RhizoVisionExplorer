Version 0.1
-----------
* Initial creation.
* The program runs in console window and extracts plant root features from each image in a specified directory.

Version 0.9
-----------
New features:
------------
* The program is converted to a GUI. The feature extraction runs on a separate thread, while progress is shown
  on main window.
* The user can specify in the window, the location of the images to be processed and the output location.
* The program can optionally output processed images.
* The program can optionally convert features from pixel units to physical units (millimeters).
* An additional feature 'Average Hole Size' is extracted from the plant root images.

Issues fixed:
------------
* demo.h:getnearestcomponents() - Fixed an issue where nearest components were wrogly assigned.
* main.cpp:getcoarsefineroots() - The coarse, medium and fine roots are returned as fraction of the total number of roots.
* main.cpp:getshallowdeeproots() - The shallow, medium and deep roots are returned as fraction of the total number of roots.
* main.cpp:feature_extractor() - Fixed the function to convert features from pixel units to physical units (millimeters).
* roottopology.cpp:getroottolopogy() - Fixed a memory leak issue, that leads to large memory allocation of the order of 9 GB
  when the program is run on 4000 images.

Version 0.91
------------
New features:
------------
* Added UI option to save binary segmented images.
* Added two new features - Number of Root Tips and Average Root Angle.
* Added UI controls to set diameter ranges.
* Added UI controls to manually set the threshold level.

Issues fixed:
------------
* Fixed issues where ghost skeletons are created.
* Fixed issue in skeletonization where the ridges were not connected to the main ridge due to mis-identification of ridge endpoints.
* The distanceTransform() on OpenCV returns wrong distances (for precise Euclidean distances) for pixels with location greater than 
  4096 rows or columns. This may make harder to compute distance transforms for larger sized images. Although OpenCV is open-source, 
  it internally calls functions from Intel's proprietary library called Intel Performance Premitives (IPP) to compute the precise 
  Euclidean distance transforms. Currently implemented the same algorithm as referred in IPP manually.

Version 1.0:
-----------
New features:
------------
* Modified feature extraction function to extract features in two separate threads.
* Calculated area of convex polygon without drawing the pixels in a separate image.
* Added About dialog box.
* Added in-program documentation. It can be accessed by clicking '?' symbol at the top right corner and clicking the user interface 
  controls.
* Added support for file types: PNG, JPG, BMP, JPEG, JPE, DIB, JP2, TIFF, TIF.
* The program now saves the user options in a separate metadata.csv in the same output folder along with features.csv for future
  reference.
* Added icons and logo to the software.

Issues fixed:
------------
* Replaced conventional rand() function from C to random_device in C++ for longer periodicity.
* Fixed program to crop empty regions before performing analysis to improve speed.
* Before extracting median and maximum root numbers, the program now skips zeros from the list of root numbers from each rows.
* Fixed estimation of Perimeter, where the program computed the sum of distances between contour points excluding the segment 
  that connects first and last contour points in a circular contour.
* Average and median diameter is now zero for an empty image where the program previously crashed for the input.
* Fixed estimation of volume and surface area of plant root so that the extracted feature is invariant to rotation of image.
  (This issue was observed when an image was created containing manually drawn straight line of same length but at different angles
  was passed to RhizoVision Analyzer.)
* The program now saves root diameters (average, median and maximum) instead of radii for easier verification by end users.
* Fixed generation of orientation histograms as the program iterates only a few points due to wrong loop condition.
* Fixed generation of orientation histograms where the program crashed when the root segment has only one pixel.
* The program is fixed to check the availability of Intel AVX 2.0 instruction set and enable vector acceleration accordingly.
* Fixed estimation of maximum diameter to scan all skeletal pixels and select the location of the pixel having maximum diameter that
  has highest row index (or greatest depth).